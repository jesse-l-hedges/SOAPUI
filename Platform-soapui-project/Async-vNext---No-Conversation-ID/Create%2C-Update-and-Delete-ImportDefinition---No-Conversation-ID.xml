<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="ef381613-fa43-4755-af7a-ccd2ee31de96" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Create, Update and Delete ImportDefinition - No Conversation ID" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="ac868f18-4303-4741-b1de-afcacc06e8b9fileName">Create-Retrieve-Update-Delete-DE-and-Filter-Def---No-Conversation-ID</con:setting>
    <con:setting id="a1db8f57-af83-4e3e-ab7e-43d9a655145ffileName">Create%2C-Update%2C-Perform-and-Delete-DataExtension---No-Conversation-ID</con:setting>
    <con:setting id="ef381613-fa43-4755-af7a-ccd2ee31de96fileName">Create%2C-Update-and-Delete-ImportDefinition---No-Conversation-ID</con:setting>
  </con:settings>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:testStep type="restrequest" name="RequestAuth - Request 1" id="1d97661b-7c11-4c65-aef1-d3239052bbd3">
    <con:settings/>
    <con:config service="Auth" resourcePath="/v1/requestToken" methodName="RequestAuth" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="RequestAuth - Request 1" id="cd080263-4158-4399-87d7-e0540300f461" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:request>{
   "clientId": "${#Project#clientid}",
   "clientSecret": "${#Project#clientsecret}"
}</con:request>
        <con:originalUri>https://auth-qa3s1.exacttargetapis.com/v1/requestToken</con:originalUri>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:parameterOrder>
          <con:entry>legacy</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="8c0ecb7e-0f97-4c23-8ef5-5ae7ad8d15f8">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer auth" id="f5bd6f82-ddf3-4bea-a489-cd402946365f">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>transfer token</con:name>
        <con:sourceType>ResponseAsXml</con:sourceType>
        <con:sourceStep>RequestAuth - Request 1</con:sourceStep>
        <con:sourcePath>declare namespace ns1='https://auth-qa3s1.exacttargetapis.com/v1/requestToken';
//ns1:Response[1]/ns1:accessToken[1]</con:sourcePath>
        <con:targetType>accessToken</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Groovy Script to Create Object Name" id="3b9c7252-b4f6-4803-bcd7-2b43ea197757">
    <con:settings/>
    <con:config>
      <script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}

generator( (('A'..'Z')+('0'..'9')).join(), 9 ) + "_QETesting"</script>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Groovy Script to Create Object Name 2" id="0e7fe787-bf39-4d05-a2d6-02cab8bfec7d">
    <con:settings/>
    <con:config>
      <script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}

generator( (('A'..'Z')+('0'..'9')).join(), 9 ) + "_QETesting"</script>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer" id="15529d17-d1e6-4074-be9b-60ceec659094">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="true" entitize="false" transferChildNodes="false">
        <con:name>objectName</con:name>
        <con:sourceType>result</con:sourceType>
        <con:sourceStep>Groovy Script to Create Object Name</con:sourceStep>
        <con:targetType>objectName</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" ignoreEmpty="false" entitize="false" transferChildNodes="false">
        <con:name>objectName2</con:name>
        <con:sourceType>result</con:sourceType>
        <con:sourceStep>Groovy Script to Create Object Name 2</con:sourceStep>
        <con:targetType>objectName2</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Create New FuelBin" id="02eebf84-ff6c-47b8-88b5-86fd7522f690">
    <con:settings/>
    <con:config service="FuelBin" resourcePath="/bin" methodName="Create New FuelBin ID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="Create New FuelBin" id="ecce9464-96a2-45a7-9668-dab62f8c6fc3" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>https://fuelbin.dev.marketingcloudapps.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://fuelbin.int.marketingcloudapps.com/bin</con:originalUri>
        <con:assertion type="JsonPath Existence Match" id="4f06ff23-e27d-4268-99f3-73266e8374c4" name="Check for existence of [id]">
          <con:configuration>
            <path>$.id</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="8c0ecb7e-0f97-4c23-8ef5-5ae7ad8d15f8">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="request" id="0c27bb8a-0989-4c42-b5c2-e4643d9c84d0" name="Create Sendable Data Extension">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>ETFramework</con:interface>
      <con:operation>Create</con:operation>
      <con:request name="Create Sendable Data Extension" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="11b6e56f-6ffe-453e-9ac8-cceccf7e4653" defaultOutgoingWss="" defaultIncomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${soapapiendpoint}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <soapenv:Header>
     <h:fueloauth xmlns="http://exacttarget.com" xmlns:h="http://exacttarget.com">${#TestCase#accessToken}</h:fueloauth>
  </soapenv:Header>
  <soapenv:Body>
    <CreateRequest xmlns="http://exacttarget.com/wsdl/partnerAPI">
   <Options>
   <SendResponseTo>
      <ResponseType>HTTPPost</ResponseType>
      <ResponseAddress>${#Project#fuelbinendpoint}/${Create New FuelBin#Response#$.id}</ResponseAddress>
      <RespondWhen>Always</RespondWhen>
      <IncludeResults>true</IncludeResults>
      <IncludeObjects>true</IncludeObjects>
   </SendResponseTo>
   
   <OrdinalID>0</OrdinalID>
   <RequestType>Asynchronous</RequestType>
</Options>
   <ns1:Objects xsi:type="ns1:DataExtension" xmlns:ns1="http://exacttarget.com/wsdl/partnerAPI">
    <ns1:PartnerKey xsi:nil="true"/>
    <ns1:ModifiedDate xsi:nil="true"/>
    <ns1:ObjectID xsi:nil="true"/>
    <ns1:CustomerKey>${Groovy Script to Create Object Name#result}</ns1:CustomerKey>
    <ns1:Name>${Groovy Script to Create Object Name#result}</ns1:Name>
    <ns1:IsSendable>true</ns1:IsSendable>
    <ns1:SendableDataExtensionField>
     <ns1:PartnerKey xsi:nil="true"/>
     <ns1:ModifiedDate xsi:nil="true"/>
     <ns1:ObjectID xsi:nil="true"/>
     <ns1:Name>EmailAddress</ns1:Name>
     <IsPrimaryKey>true</IsPrimaryKey>
    </ns1:SendableDataExtensionField>
    <ns1:SendableSubscriberField>
     <ns1:Name>Subscriber Key</ns1:Name>
     <ns1:Value>EmailAddress</ns1:Value>
    </ns1:SendableSubscriberField>
    <ns1:Fields>
     <ns1:Field>
      <ns1:PartnerKey xsi:nil="true"/>
      <ns1:ModifiedDate xsi:nil="true"/>
      <ns1:ObjectID xsi:nil="true"/>
      <ns1:Name>EmailAddress</ns1:Name>
      <ns1:IsRequired>true</ns1:IsRequired>
      <ns1:FieldType>EmailAddress</ns1:FieldType>
     </ns1:Field>
     <ns1:Field>
      <ns1:PartnerKey xsi:nil="true"/>
      <ns1:ModifiedDate xsi:nil="true"/>
      <ns1:ObjectID xsi:nil="true"/>
      <ns1:Name>Gender</ns1:Name>
      <ns1:IsRequired>false</ns1:IsRequired>
      <ns1:FieldType>Text</ns1:FieldType>
     </ns1:Field>
     <ns1:Field>
      <ns1:PartnerKey xsi:nil="true"/>
      <ns1:ModifiedDate xsi:nil="true"/>
      <ns1:ObjectID xsi:nil="true"/>
      <ns1:Name>Region</ns1:Name>
      <ns1:IsRequired>false</ns1:IsRequired>
      <ns1:FieldType>Text</ns1:FieldType>
     </ns1:Field>
     <ns1:Field>
      <ns1:PartnerKey xsi:nil="true"/>
      <ns1:ModifiedDate xsi:nil="true"/>
      <ns1:ObjectID xsi:nil="true"/>
      <ns1:Name>Full Name</ns1:Name>
      <ns1:IsRequired>false</ns1:IsRequired>
      <ns1:FieldType>Text</ns1:FieldType>
     </ns1:Field>
    </ns1:Fields>
   </ns1:Objects>
  </CreateRequest>

  </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="SOAP Response" id="f6ae2dd4-58cd-4acf-943c-520e4d55e9be" name="SOAP Response"/>
        <con:assertion type="XPath Match" id="7ed04654-0839-4744-b05b-608bba04a20e" name="Match content of [StatusCode]">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
//ns1:CreateResponse[1]/ns1:Results[1]/ns1:StatusCode[1]/text()</path>
            <content>OK</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="XPath Match" id="cf55b716-1ee7-4135-b18e-57197d8949aa" name="Match content of [StatusMessage]">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
//ns1:CreateResponse[1]/ns1:Results[1]/ns1:StatusMessage[1]/text()</path>
            <content>Queued</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Valid HTTP Status Codes" id="abd95715-cbe1-4e3f-bd65-a20c98c8b7f7" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="Create"/>
        <con:wsrmConfig version="1.2"/>
        <con:environmentSpec>
          <con:entry environmentId="8c0ecb7e-0f97-4c23-8ef5-5ae7ad8d15f8">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="request" id="f95f2d1d-2d02-4e08-90fa-89c270725d8d" name="Create ImportDefinition">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>ETFramework</con:interface>
      <con:operation>Create</con:operation>
      <con:request name="Create ImportDefinition" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="11b6e56f-6ffe-453e-9ac8-cceccf7e4653" defaultOutgoingWss="" defaultIncomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${soapapiendpoint}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <soapenv:Header>
     <h:fueloauth xmlns="http://exacttarget.com" xmlns:h="http://exacttarget.com">${#TestCase#accessToken}</h:fueloauth>
  </soapenv:Header>
  <soapenv:Body>
        <CreateRequest xmlns="http://exacttarget.com/wsdl/partnerAPI">
		<Options>
		   <SendResponseTo>
		      <ResponseType>HTTPPost</ResponseType>
		      <ResponseAddress>${#Project#fuelbinendpoint}/${Create New FuelBin#Response#$.id}</ResponseAddress>
		      <RespondWhen>Always</RespondWhen>
		      <IncludeResults>true</IncludeResults>
		      <IncludeObjects>true</IncludeObjects>
		   </SendResponseTo>
		   
		   <OrdinalID>0</OrdinalID>
		   <RequestType>Asynchronous</RequestType>
		</Options>
		<Objects xsi:type="ns1:ImportDefinition" xmlns:ns1="http://exacttarget.com/wsdl/partnerAPI">
		 <CustomerKey>${Groovy Script to Create Object Name 2#result}</CustomerKey>
		 <Name>${Groovy Script to Create Object Name 2#result}</Name>
		 <AllowErrors>true</AllowErrors>
		 <DestinationObject xsi:type="ns1:DataExtension">
		     <ObjectID xsi:nil="true"/>
		     <CustomerKey>${Groovy Script to Create Object Name#result}</CustomerKey>
		 </DestinationObject>
		 <FieldMappingType>InferFromColumnHeadings</FieldMappingType>
		 <FileSpec>Import2M2L.csv</FileSpec>
		 <FileType>CSV</FileType>
		 <Notification>
		     <ResponseType>email</ResponseType>
		     <ResponseAddress>chris.allen@salesforce.com</ResponseAddress>
		 </Notification>
		 <RetrieveFileTransferLocation>
		     <CustomerKey>ExactTarget Enhanced FTP</CustomerKey>
		 </RetrieveFileTransferLocation>
		 <UpdateType>Overwrite</UpdateType>
		</Objects>
        </CreateRequest>
    </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="SOAP Response" id="f6ae2dd4-58cd-4acf-943c-520e4d55e9be" name="SOAP Response"/>
        <con:assertion type="XPath Match" id="7ed04654-0839-4744-b05b-608bba04a20e" name="Match content of [StatusCode]">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
//ns1:CreateResponse[1]/ns1:Results[1]/ns1:StatusCode[1]/text()</path>
            <content>OK</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="XPath Match" id="cf55b716-1ee7-4135-b18e-57197d8949aa" name="Match content of [StatusMessage]">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
//ns1:CreateResponse[1]/ns1:Results[1]/ns1:StatusMessage[1]/text()</path>
            <content>Queued</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Valid HTTP Status Codes" id="abd95715-cbe1-4e3f-bd65-a20c98c8b7f7" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="Create"/>
        <con:wsrmConfig version="1.2"/>
        <con:environmentSpec>
          <con:entry environmentId="8c0ecb7e-0f97-4c23-8ef5-5ae7ad8d15f8">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="request" name="Retrieve ID to Confirm Create" id="2092d2f7-beea-455d-a226-7ac7988bd7af">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>ETFramework</con:interface>
      <con:operation>Retrieve</con:operation>
      <con:request name="Retrieve ID to Confirm Create" id="d9412851-a03e-493f-b996-c89f86b4d693" defaultOutgoingWss="" defaultIncomingWss="" outgoingWss="" incomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${soapapiendpoint}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <soapenv:Header>
     <h:fueloauth xmlns="http://exacttarget.com" xmlns:h="http://exacttarget.com">${#TestCase#accessToken}</h:fueloauth>
  </soapenv:Header>
   <soapenv:Body>
      <RetrieveRequestMsg xmlns="http://exacttarget.com/wsdl/partnerAPI">
      <RetrieveRequest>
         <ObjectType>ImportDefinition</ObjectType>
         <Properties>ObjectID</Properties>
         <Properties>CustomerKey</Properties>
         <Properties>Name</Properties>
         <Filter xsi:type="SimpleFilterPart">
            <Property>CustomerKey</Property>
            <SimpleOperator>equals</SimpleOperator>
            <Value>${Groovy Script to Create Object Name 2#result}</Value>
         </Filter>
      </RetrieveRequest>
   </RetrieveRequestMsg>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="SOAP Response" id="47853253-cfed-4fd7-b9cc-fbf80534a1a8"/>
        <con:assertion type="XPath Match" id="9ca11bb7-46a9-41a3-9a37-4f103fd4d9c2" name="Check for existence of [ObjectID]" disabled="true">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
exists( //ns1:RetrieveResponseMsg/ns1:Results/ns1:ObjectID)</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
        <con:environmentSpec>
          <con:entry environmentId="8c0ecb7e-0f97-4c23-8ef5-5ae7ad8d15f8">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Confirm ID Create" id="67927c3e-5116-4b56-868a-a02430c6f56c">
    <con:settings/>
    <con:config>
      <script>import groovy.util.XmlSlurper

def response = new XmlSlurper().parseText(context.expand( '${Retrieve ID to Confirm Create#Response#declare namespace ns1=\'http://exacttarget.com/wsdl/partnerAPI\'; //ns1:RetrieveResponseMsg[1]}' ))

if( context.loopIndex == null )
context.loopIndex = 0
def numberOfTimes = context.expand( '${#TestCase#numberOfTimes}' ).toInteger()

if ( response.Results.Name != context.expand('${Groovy Script to Create Object Name 2#result}') ) {
  if ( ++context.loopIndex &lt;  numberOfTimes ) {
    log.info "ID not created yet"
    sleep(1000)
    testRunner.gotoStepByName( "Retrieve ID to Confirm Create" )
  }
  else {
    log.info "Timeout, test should fail"
    testRunner.fail("ID not created after " + numberOfTimes.toString() + " retrieve attempts, timing out")
  }
}
else {
  log.info "ID created"
  testRunner.gotoStepByName( "Transfer Object ID Property" ) 
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Transfer Object ID Property" id="ca7e9429-a388-4f1a-9759-60e9a536c431">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>ImportDefObjectID</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>Retrieve ID to Confirm Create</con:sourceStep>
        <con:sourcePath>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
//ns1:RetrieveResponseMsg[1]/ns1:Results[1]/ns1:ObjectID[1]</con:sourcePath>
        <con:targetType>importDefObjectID</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="request" name="Update Import Definition" id="ed17b6e3-8f23-4944-88fa-d6aa5b595c92">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>ETFramework</con:interface>
      <con:operation>Update</con:operation>
      <con:request name="Update Import Definition" id="bcdfdfeb-65b7-4fc3-abf6-9130d2132ffe" defaultOutgoingWss="" defaultIncomingWss="" outgoingWss="" incomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${soapapiendpoint}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <soapenv:Header>
     <h:fueloauth xmlns="http://exacttarget.com" xmlns:h="http://exacttarget.com">${#TestCase#accessToken}</h:fueloauth>
  </soapenv:Header>
   <soapenv:Body>
      <UpdateRequest xmlns="http://exacttarget.com/wsdl/partnerAPI">
         <Options>
		   <SendResponseTo>
		      <ResponseType>HTTPPost</ResponseType>
		      <ResponseAddress>${#Project#fuelbinendpoint}/${Create New FuelBin#Response#$.id}</ResponseAddress>
		      <RespondWhen>Always</RespondWhen>
		      <IncludeResults>true</IncludeResults>
		      <IncludeObjects>true</IncludeObjects>
		   </SendResponseTo>
		   
		   <OrdinalID>0</OrdinalID>
		   <RequestType>Asynchronous</RequestType>
		</Options>

		<Objects xsi:type="ns1:ImportDefinition" xmlns:ns1="http://exacttarget.com/wsdl/partnerAPI">
		 	<CustomerKey>${Groovy Script to Create Object Name 2#result}</CustomerKey>
		 	<AllowErrors>false</AllowErrors>
		</Objects>
  	</UpdateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="SOAP Response" id="17cf4dab-cbb6-4f51-9416-6946c1c49d8b"/>
        <con:assertion type="XPath Match" id="706c4414-2080-449f-82d9-bbaf46e13003" name="Match content of [StatusCode]">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
//ns1:UpdateResponse[1]/ns1:Results[1]/ns1:StatusCode[1]/text()</path>
            <content>OK</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="XPath Match" id="cc067966-2d13-43ed-b83a-05297884f19a" name="Match content of [StatusMessage]">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
//ns1:UpdateResponse[1]/ns1:Results[1]/ns1:StatusMessage[1]/text()</path>
            <content>Queued</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Valid HTTP Status Codes" id="f660a696-ffd9-4b67-a65f-846b2ab5fb3c" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
        <con:environmentSpec>
          <con:entry environmentId="8c0ecb7e-0f97-4c23-8ef5-5ae7ad8d15f8">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="request" name="Retrieve ID to Confirm Update" id="b516fe53-e60c-4279-bd61-059bf373a95e">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>ETFramework</con:interface>
      <con:operation>Retrieve</con:operation>
      <con:request name="Retrieve ID to Confirm Update" id="d9412851-a03e-493f-b996-c89f86b4d693" defaultOutgoingWss="" defaultIncomingWss="" outgoingWss="" incomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${soapapiendpoint}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <soapenv:Header>
     <h:fueloauth xmlns="http://exacttarget.com" xmlns:h="http://exacttarget.com">${#TestCase#accessToken}</h:fueloauth>
  </soapenv:Header>
   <soapenv:Body>
      <RetrieveRequestMsg xmlns="http://exacttarget.com/wsdl/partnerAPI">
      <RetrieveRequest>
         <ObjectType>ImportDefinition</ObjectType>
         <Properties>ObjectID</Properties>
         <Properties>CustomerKey</Properties>
         <Properties>Name</Properties>
         <Properties>AllowErrors</Properties>
         <Properties>UpdateType</Properties>
         <Filter xsi:type="SimpleFilterPart">
            <Property>CustomerKey</Property>
            <SimpleOperator>equals</SimpleOperator>
            <Value>${Groovy Script to Create Object Name 2#result}</Value>
         </Filter>
      </RetrieveRequest>
   </RetrieveRequestMsg>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="SOAP Response" id="47853253-cfed-4fd7-b9cc-fbf80534a1a8"/>
        <con:assertion type="XPath Match" id="9ca11bb7-46a9-41a3-9a37-4f103fd4d9c2" name="Check for existence of [ObjectID]" disabled="true">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
exists( //ns1:RetrieveResponseMsg/ns1:Results/ns1:ObjectID)</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="XPath Match" id="c75cda4b-1193-4b4d-8ffd-a43077f2fd63" name="XPath Match" disabled="true">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
//ns1:RetrieveResponseMsg[1]/ns1:Results[1]/ns1:AllowErrors[1]</path>
            <content>false</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
        <con:environmentSpec>
          <con:entry environmentId="8c0ecb7e-0f97-4c23-8ef5-5ae7ad8d15f8">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Confirm Update" id="2ebdb058-f430-4153-ab21-c300706d57ec">
    <con:settings/>
    <con:config>
      <script>import groovy.util.XmlSlurper

def response = new XmlSlurper().parseText(context.expand( '${Retrieve ID to Confirm Update#Response#declare namespace ns1=\'http://exacttarget.com/wsdl/partnerAPI\'; //ns1:RetrieveResponseMsg[1]}' ))

if( context.loopIndex == null )
context.loopIndex = 0
def numberOfTimes = context.expand( '${#TestCase#numberOfTimes}' ).toInteger()
if ( response.Results.AllowErrors != false ) {
  if ( ++context.loopIndex &lt;  numberOfTimes ) {
    log.info "ID not updated yet"
    sleep(1000)
    testRunner.gotoStepByName( "Retrieve ID to Confirm Update" )
  }
  else {
    log.info "Timeout, test should fail"
    testRunner.fail("ID not updated after " + numberOfTimes.toString() + " retrieve attempts, timing out")
  }
}
else {
  log.info "ID updated"
  testRunner.gotoStepByName( "Delete Import Definition" ) 
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="request" name="Delete Import Definition" id="e83f8cbe-6077-47d6-9db7-c7d2df0962b2">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>ETFramework</con:interface>
      <con:operation>Delete</con:operation>
      <con:request name="Delete Import Definition" id="7bf289f2-9a9e-45fa-8bca-66dc6efc4661" defaultOutgoingWss="" defaultIncomingWss="" outgoingWss="" incomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          <con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">Only the first nodes</con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${soapapiendpoint}</con:endpoint>
        <con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <SOAP-ENV:Header>
     <h:fueloauth xmlns="http://exacttarget.com" xmlns:h="http://exacttarget.com">${#TestCase#accessToken}</h:fueloauth>
   </SOAP-ENV:Header>
 <SOAP-ENV:Body>
  <DeleteRequest xmlns="http://exacttarget.com/wsdl/partnerAPI">
      <Options>
   <SendResponseTo>
      <ResponseType>HTTPPost</ResponseType>
      <ResponseAddress>${#Project#fuelbinendpoint}/${Create New FuelBin#Response#$.id}</ResponseAddress>
      <RespondWhen>Always</RespondWhen>
      <IncludeResults>true</IncludeResults>
      <IncludeObjects>true</IncludeObjects>
   </SendResponseTo>
   
   <OrdinalID>0</OrdinalID>
   <RequestType>Asynchronous</RequestType>
</Options>
   <ns1:Objects xsi:type="ns1:ImportDefinition" xmlns:ns1="http://exacttarget.com/wsdl/partnerAPI">
    <ns1:ObjectID>${#TestCase#importDefObjectID}</ns1:ObjectID>
    </ns1:Objects>
 </DeleteRequest>
 </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request>
        <con:assertion type="SOAP Response" id="076d4771-7559-4c05-9430-a70f41a0bd00"/>
        <con:assertion type="Valid HTTP Status Codes" id="d76b221c-a2ae-4601-8687-ac32fc6f0055" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="XPath Match" id="e9bceb57-b667-47f1-b4ee-11e1510d6d4b" name="Match content of [StatusCode]">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
//ns1:DeleteResponse[1]/ns1:Results[1]/ns1:StatusCode[1]/text()</path>
            <content>OK</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="XPath Match" id="ba9a87e7-7f19-4482-8b21-27a5e062689c" name="Match content of [StatusMessage]">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
//ns1:DeleteResponse[1]/ns1:Results[1]/ns1:StatusMessage[1]/text()</path>
            <content>Queued</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
        <con:environmentSpec>
          <con:entry environmentId="8c0ecb7e-0f97-4c23-8ef5-5ae7ad8d15f8">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="request" name="Retrieve Import Def to Confirm Delete" id="49565217-6c3a-42d7-a4d5-fc6c5fcb40a2">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>ETFramework</con:interface>
      <con:operation>Retrieve</con:operation>
      <con:request name="Retrieve Import Def to Confirm Delete" id="d9412851-a03e-493f-b996-c89f86b4d693" defaultOutgoingWss="" defaultIncomingWss="" outgoingWss="" incomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${soapapiendpoint}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <soapenv:Header>
     <h:fueloauth xmlns="http://exacttarget.com" xmlns:h="http://exacttarget.com">${#TestCase#accessToken}</h:fueloauth>
  </soapenv:Header>
   <soapenv:Body>
      <RetrieveRequestMsg xmlns="http://exacttarget.com/wsdl/partnerAPI">
      <RetrieveRequest>
         <ObjectType>ImportDefinition</ObjectType>
         <Filter xsi:type="SimpleFilterPart">
            <Property>CustomerKey</Property>
            <SimpleOperator>equals</SimpleOperator>
            <Value>${Groovy Script to Create Object Name 2#result}</Value>
         </Filter>
      </RetrieveRequest>
   </RetrieveRequestMsg>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="SOAP Response" id="47853253-cfed-4fd7-b9cc-fbf80534a1a8"/>
        <con:assertion type="Simple NotContains" id="fad2365f-7d3c-493f-87d8-f54e265f710d" name="Not Contains" disabled="true">
          <con:configuration>
            <token>Results</token>
            <ignoreCase>false</ignoreCase>
            <useRegEx>false</useRegEx>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
        <con:environmentSpec>
          <con:entry environmentId="8c0ecb7e-0f97-4c23-8ef5-5ae7ad8d15f8">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Confirm Delete" id="1e3e5045-23b3-48a9-aa68-9904452d0ff1">
    <con:settings/>
    <con:config>
      <script>import groovy.util.XmlSlurper

def response = new XmlSlurper().parseText(context.expand( '${Retrieve Import Def to Confirm Delete#Response#declare namespace ns1=\'http://exacttarget.com/wsdl/partnerAPI\'; //ns1:RetrieveResponseMsg[1]}' ))

if( context.loopIndex == null )
context.loopIndex = 0
def numberOfTimes = context.expand( '${#TestCase#numberOfTimes}' ).toInteger()
if ( response.Results.ObjectID.size() > 0 ) {
  if ( ++context.loopIndex &lt;  numberOfTimes ) {
    log.info "Delete for ID not executed yet"
    sleep(1000)
    testRunner.gotoStepByName( "Retrieve Import Def to Confirm Delete" )
  }
  else {
    log.info "Timeout, test should fail"
    testRunner.fail("ID not Deleted after " + numberOfTimes.toString() + " retrieve attempts, timing out")
  }
}
else {
  log.info "ID was Deleted"
}</script>
    </con:config>
  </con:testStep>
  <con:properties>
    <con:property>
      <con:name>objectName</con:name>
      <con:value>2Y9ZLWTQP_QETesting</con:value>
    </con:property>
    <con:property>
      <con:name>numberOfTimes</con:name>
      <con:value>40</con:value>
    </con:property>
    <con:property>
      <con:name>accessToken</con:name>
      <con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ctKqR2al2plWZC6aEgRRPcUD</con:value>
    </con:property>
    <con:property>
      <con:name>objectName2</con:name>
      <con:value>BA16WMFKP_QETesting</con:value>
    </con:property>
    <con:property>
      <con:name>importDefObjectID</con:name>
      <con:value>5d1e7211-126c-e711-80d1-1402ec6b9540</con:value>
    </con:property>
  </con:properties>
  <con:reportParameters/>
  <con:breakPoints>
    <con:testStepId>0fb1bf79-670f-4223-ba44-b61a12efffbe</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>a70095c8-6291-4580-824d-3801e204a3d8</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>368d3c40-5a48-497f-9074-cd4893be0057</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>eb4fd9a4-7897-47d1-bc65-54fc2278ebd3</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>631de50e-aa6b-4a34-9bc3-31552f806365</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>b9cd808a-aac0-4a17-83cf-bac0891d2f53</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>8ede29b7-b2ee-410a-931b-7a359984b3d4</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>caff2a85-d9ff-4c37-98f8-1d0e9ebfb35a</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>f95f2d1d-2d02-4e08-90fa-89c270725d8d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>0c27bb8a-0989-4c42-b5c2-e4643d9c84d0</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>0e7fe787-bf39-4d05-a2d6-02cab8bfec7d</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>ed17b6e3-8f23-4944-88fa-d6aa5b595c92</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>ca7e9429-a388-4f1a-9759-60e9a536c431</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>2ebdb058-f430-4153-ab21-c300706d57ec</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
</con:testCase>
