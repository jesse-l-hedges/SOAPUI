<?xml version="1.0" encoding="UTF-8"?>
<con:testCase id="41cf8179-4c01-430b-9737-cdccd8b91355" discardOkResults="true" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="Create, Update, Delete Email- No ConversationID" searchProperties="true" timeout="0" xmlns:con="http://eviware.com/soapui/config">
  <con:settings>
    <con:setting id="6c5236e5-8ed1-4623-97b8-429b228c6487fileName">Create%2C-Update%2C-Delete-Folder</con:setting>
    <con:setting id="09dac373-01b6-4b26-a553-7add0493297efileName">Create%2C-Update%2C-Delete-Email</con:setting>
    <con:setting id="41cf8179-4c01-430b-9737-cdccd8b91355fileName">Create%2C-Update%2C-Delete-Email--No-ConversationID</con:setting>
  </con:settings>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:testStep type="restrequest" name="RequestAuth - Request 1" id="4f4c5e6d-a458-4cee-baae-de0c96011962">
    <con:settings/>
    <con:config service="Auth" resourcePath="/v1/requestToken" methodName="RequestAuth" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="RequestAuth - Request 1" id="cd080263-4158-4399-87d7-e0540300f461" mediaType="application/json" postQueryString="false">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:request>{
   "clientId": "${#Project#asyncClientID}",
   "clientSecret": "${#Project#asyncClientSecret}"
}</con:request>
        <con:originalUri>https://auth-qa3s1.exacttargetapis.com/v1/requestToken</con:originalUri>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:parameterOrder>
          <con:entry>legacy</con:entry>
        </con:parameterOrder>
        <con:environmentSpec>
          <con:entry environmentId="8c0ecb7e-0f97-4c23-8ef5-5ae7ad8d15f8">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer auth" id="cb29c215-f051-49f9-8b92-97300c2d0bb9">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>transfer token</con:name>
        <con:sourceType>ResponseAsXml</con:sourceType>
        <con:sourceStep>RequestAuth - Request 1</con:sourceStep>
        <con:sourcePath>declare namespace ns1='https://auth-qa3s1.exacttargetapis.com/v1/requestToken';
//ns1:Response[1]/ns1:accessToken[1]</con:sourcePath>
        <con:targetType>accessToken</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Create Random Email Name" id="44878c96-b117-4e6d-8255-653d16d6b39e">
    <con:settings/>
    <con:config>
      <script>def generator = { String alphabet, int n ->
  new Random().with {
    (1..n).collect { alphabet[ nextInt( alphabet.length() ) ] }.join()
  }
}

generator( (('A'..'Z')+('0'..'9')).join(), 9 ) + "_QETesting"</script>
    </con:config>
  </con:testStep>
  <con:testStep type="restrequest" name="Create New FuelBin" id="3001272c-4b8f-455b-98f8-8eb21d4609e7">
    <con:settings/>
    <con:config service="FuelBin" resourcePath="/bin" methodName="Create New FuelBin ID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:restRequest name="Create New FuelBin" id="ecce9464-96a2-45a7-9668-dab62f8c6fc3" mediaType="application/json">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:endpoint>https://fuelbin.dev.marketingcloudapps.com</con:endpoint>
        <con:request/>
        <con:originalUri>https://fuelbin.int.marketingcloudapps.com/bin</con:originalUri>
        <con:assertion type="JsonPath Existence Match" id="4f06ff23-e27d-4268-99f3-73266e8374c4" name="Check for existence of [id]">
          <con:configuration>
            <path>$.id</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:parameters/>
        <con:environmentSpec>
          <con:entry environmentId="8c0ecb7e-0f97-4c23-8ef5-5ae7ad8d15f8">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:restRequest>
    </con:config>
  </con:testStep>
  <con:testStep type="request" id="2de61ec0-80e6-4009-bc09-144ad45d33e8" name="Create Email">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>ETFramework</con:interface>
      <con:operation>Create</con:operation>
      <con:request name="Create Email" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="11b6e56f-6ffe-453e-9ac8-cceccf7e4653" defaultOutgoingWss="" defaultIncomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${soapapiendpoint}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <soapenv:Header>
     <h:fueloauth xmlns="http://exacttarget.com" xmlns:h="http://exacttarget.com">${#TestCase#accessToken}</h:fueloauth>
  </soapenv:Header>
  <soapenv:Body>
    <CreateRequest xmlns="http://exacttarget.com/wsdl/partnerAPI">
   <Options>
   <SendResponseTo>
      <ResponseType>HTTPPost</ResponseType>
      <ResponseAddress>${#Project#fuelbinendpoint}/${Create New FuelBin#Response#$.id}</ResponseAddress>
      <RespondWhen>Always</RespondWhen>
      <IncludeResults>true</IncludeResults>
      <IncludeObjects>true</IncludeObjects>
   </SendResponseTo>
   
   <OrdinalID>0</OrdinalID>
   <RequestType>Asynchronous</RequestType>
</Options>
	<Objects xsi:type="Email">
	      <CustomerKey>${Create Random Email Name#result}</CustomerKey>
	      <Name>${Create Random Email Name#result}</Name>
	      <Subject>Created with Automated TestCase</Subject>
	      <HTMLBody>&lt;b&gt;This is a test message from Automated TestCase&lt;/\b&gt;</HTMLBody>
	      <EmailType>Text Only</EmailType>
      	<IsHTMLPaste>true</IsHTMLPaste>
	  </Objects>
  </CreateRequest>
</soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="SOAP Response" id="f6ae2dd4-58cd-4acf-943c-520e4d55e9be" name="SOAP Response"/>
        <con:assertion type="XPath Match" id="7ed04654-0839-4744-b05b-608bba04a20e" name="Match content of [StatusCode]">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
//ns1:CreateResponse[1]/ns1:Results[1]/ns1:StatusCode[1]/text()</path>
            <content>OK</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="XPath Match" id="cf55b716-1ee7-4135-b18e-57197d8949aa" name="Match content of [StatusMessage]">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
//ns1:CreateResponse[1]/ns1:Results[1]/ns1:StatusMessage[1]/text()</path>
            <content>Queued</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Valid HTTP Status Codes" id="abd95715-cbe1-4e3f-bd65-a20c98c8b7f7" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508" action="Create"/>
        <con:wsrmConfig version="1.2"/>
        <con:environmentSpec>
          <con:entry environmentId="8c0ecb7e-0f97-4c23-8ef5-5ae7ad8d15f8">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="request" name="Retrieve Email to confirm create" id="0ada5d91-d3a7-4977-89c2-ae14c450a151">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>ETFramework</con:interface>
      <con:operation>Retrieve</con:operation>
      <con:request name="Retrieve Email to confirm create" id="d9412851-a03e-493f-b996-c89f86b4d693" defaultOutgoingWss="" defaultIncomingWss="" outgoingWss="" incomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${soapapiendpoint}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <soapenv:Header>
     <h:fueloauth xmlns="http://exacttarget.com" xmlns:h="http://exacttarget.com">${#TestCase#accessToken}</h:fueloauth>
  </soapenv:Header>
   <soapenv:Body>
      <RetrieveRequestMsg xmlns="http://exacttarget.com/wsdl/partnerAPI">
      <RetrieveRequest>
         <ObjectType>Email</ObjectType>
         <Properties>ID</Properties>
         <Properties>CustomerKey</Properties>
         <Properties>Name</Properties>
         <Properties>EmailType</Properties>
         <Filter xsi:type="SimpleFilterPart">
            <Property>CustomerKey</Property>
            <SimpleOperator>equals</SimpleOperator>
            <Value>${Create Random Email Name#result}</Value>
         </Filter>
      </RetrieveRequest>
   </RetrieveRequestMsg>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="SOAP Response" id="47853253-cfed-4fd7-b9cc-fbf80534a1a8"/>
        <con:assertion type="XPath Match" id="9ca11bb7-46a9-41a3-9a37-4f103fd4d9c2" name="Check for existence of [ObjectID]" disabled="true">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
exists( //ns1:RetrieveResponseMsg/ns1:Results/ns1:ObjectID)</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
        <con:environmentSpec>
          <con:entry environmentId="8c0ecb7e-0f97-4c23-8ef5-5ae7ad8d15f8">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Confirm Create" id="2441f150-52db-42b4-b744-9f464611f1b6">
    <con:settings/>
    <con:config>
      <script>import groovy.util.XmlSlurper

def response = new XmlSlurper().parseText(context.expand( '${Retrieve Email to confirm create#Response#declare namespace ns1=\'http://exacttarget.com/wsdl/partnerAPI\'; //ns1:RetrieveResponseMsg[1]}' ))

if( context.loopIndex == null )
context.loopIndex = 0
def numberOfTimes = context.expand( '${#TestCase#numberOfTimes}' ).toInteger()


if ( response.Results.ObjectID.size() == 0 ) {
  if ( ++context.loopIndex &lt;  numberOfTimes ) {
    log.info "Email not created yet"
    sleep(1000)
    testRunner.gotoStepByName( "Retrieve Email to confirm create" )
  }
  else {
    log.info "Timeout, test should fail"
    testRunner.fail("Email not created after " + numberOfTimes.toString() + " retrieve attempts, timing out")
  }
}
else {
  log.info "Email created"
  testRunner.gotoStepByName( "Property Transfer Email ObjectID" ) 
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="transfer" name="Property Transfer Email ObjectID" id="c23c5fa1-85b9-48f4-8135-addd3ef54c29">
    <con:settings/>
    <con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false">
        <con:name>ObjectID</con:name>
        <con:sourceType>Response</con:sourceType>
        <con:sourceStep>Retrieve Email to confirm create</con:sourceStep>
        <con:sourcePath>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
//ns1:RetrieveResponseMsg[1]/ns1:Results[1]/ns1:ID[1]</con:sourcePath>
        <con:targetType>ObjectID</con:targetType>
        <con:targetStep>#TestCase#</con:targetStep>
        <con:targetPath/>
        <con:upgraded>true</con:upgraded>
      </con:transfers>
    </con:config>
  </con:testStep>
  <con:testStep type="request" name="Update Email" id="4f7a635f-38d3-42bd-a685-a20a8d8069fd">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>ETFramework</con:interface>
      <con:operation>Update</con:operation>
      <con:request name="Update Email" id="bcdfdfeb-65b7-4fc3-abf6-9130d2132ffe" defaultOutgoingWss="" defaultIncomingWss="" outgoingWss="" incomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${soapapiendpoint}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <soapenv:Header>
     <h:fueloauth xmlns="http://exacttarget.com" xmlns:h="http://exacttarget.com">${#TestCase#accessToken}</h:fueloauth>
  </soapenv:Header>
   <soapenv:Body>
      <UpdateRequest xmlns="http://exacttarget.com/wsdl/partnerAPI">
         <Options>
		   <SendResponseTo>
		      <ResponseType>HTTPPost</ResponseType>
		      <ResponseAddress>${#Project#fuelbinendpoint}/${Create New FuelBin#Response#$.id}</ResponseAddress>
		      <RespondWhen>Always</RespondWhen>
		      <IncludeResults>true</IncludeResults>
		      <IncludeObjects>true</IncludeObjects>
		   </SendResponseTo>
		   
		   <OrdinalID>0</OrdinalID>
		   <RequestType>Asynchronous</RequestType>
		</Options>

		<Objects xsi:type="ns1:Email" xmlns:ns1="http://exacttarget.com/wsdl/partnerAPI">
		 	<CustomerKey>${Create Random Email Name#result}</CustomerKey>
		 	<Name>Updated Email Name</Name>
		</Objects>
  	</UpdateRequest>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="SOAP Response" id="17cf4dab-cbb6-4f51-9416-6946c1c49d8b"/>
        <con:assertion type="XPath Match" id="706c4414-2080-449f-82d9-bbaf46e13003" name="Match content of [StatusCode]">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
//ns1:UpdateResponse[1]/ns1:Results[1]/ns1:StatusCode[1]/text()</path>
            <content>OK</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="XPath Match" id="cc067966-2d13-43ed-b83a-05297884f19a" name="Match content of [StatusMessage]">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
//ns1:UpdateResponse[1]/ns1:Results[1]/ns1:StatusMessage[1]/text()</path>
            <content>Queued</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="Valid HTTP Status Codes" id="f660a696-ffd9-4b67-a65f-846b2ab5fb3c" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
        <con:environmentSpec>
          <con:entry environmentId="8c0ecb7e-0f97-4c23-8ef5-5ae7ad8d15f8">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="request" name="Retrieve Email to confirm update" id="2c8ff05a-76d9-4481-b123-4a355bfd132e">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>ETFramework</con:interface>
      <con:operation>Retrieve</con:operation>
      <con:request name="Retrieve Email to confirm update" id="d9412851-a03e-493f-b996-c89f86b4d693" defaultOutgoingWss="" defaultIncomingWss="" outgoingWss="" incomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${soapapiendpoint}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <soapenv:Header>
     <h:fueloauth xmlns="http://exacttarget.com" xmlns:h="http://exacttarget.com">${#TestCase#accessToken}</h:fueloauth>
  </soapenv:Header>
   <soapenv:Body>
      <RetrieveRequestMsg xmlns="http://exacttarget.com/wsdl/partnerAPI">
      <RetrieveRequest>
         <ObjectType>Email</ObjectType>
         <Properties>ID</Properties>
         <Properties>Name</Properties>
         <Properties>CustomerKey</Properties>
         <Properties>EmailType</Properties>
         <Filter xsi:type="SimpleFilterPart">
            <Property>CustomerKey</Property>
            <SimpleOperator>equals</SimpleOperator>
            <Value>${Create Random Email Name#result}</Value>
         </Filter>
      </RetrieveRequest>
   </RetrieveRequestMsg>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="SOAP Response" id="47853253-cfed-4fd7-b9cc-fbf80534a1a8"/>
        <con:assertion type="XPath Match" id="9ca11bb7-46a9-41a3-9a37-4f103fd4d9c2" name="Check for existence of [ObjectID]" disabled="true">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
exists( //ns1:RetrieveResponseMsg/ns1:Results/ns1:ObjectID)</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="XPath Match" id="cf8260cb-77d3-4b25-9be7-820d2ba0c0a2" name="XPath Match" disabled="true">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
//ns1:RetrieveResponseMsg[1]/ns1:Results[1]/ns1:Name[1]</path>
            <content>Updated Email Name</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="XPath Match" id="b886a0b8-61c1-4848-86a8-37cd14134465" name="XPath Match 2" disabled="true">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
//ns1:RetrieveResponseMsg[1]/ns1:OverallStatus[1]</path>
            <content>OK</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
        <con:environmentSpec>
          <con:entry environmentId="8c0ecb7e-0f97-4c23-8ef5-5ae7ad8d15f8">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Confirm Update" id="6d3afd0d-35d0-4c7d-9361-3baa229d666f">
    <con:settings/>
    <con:config>
      <script>import groovy.util.XmlSlurper

def response = new XmlSlurper().parseText(context.expand( '${Retrieve Email to confirm update#Response#declare namespace ns1=\'http://exacttarget.com/wsdl/partnerAPI\'; //ns1:RetrieveResponseMsg[1]}' ))

if( context.loopIndex == null )
context.loopIndex = 0
def numberOfTimes = context.expand( '${#TestCase#numberOfTimes}' ).toInteger()

//ns1:RetrieveResponseMsg[1]/ns1:Results[1]/ns1:IsSendable[1]
if ( response.Results.Name != "Updated Email Name") { //check if IsSendable has toggled yet
  if ( ++context.loopIndex &lt;  numberOfTimes ) {
    log.info "Email not updated yet"
    sleep(1000)
    testRunner.gotoStepByName( "Retrieve Email to confirm update" )
  }
  else {
    log.info "Timeout, test should fail"
    testRunner.fail("Email not updated after " + numberOfTimes.toString() + " retrieve attempts, timing out")
  }
}
else {
  log.info "Email updated"
  testRunner.gotoStepByName( "Delete Email" ) 
}</script>
    </con:config>
  </con:testStep>
  <con:testStep type="request" name="Delete Email" id="9f589358-a77f-4871-8751-b2c2ff06f7b1">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>ETFramework</con:interface>
      <con:operation>Delete</con:operation>
      <con:request name="Delete Email" id="7bf289f2-9a9e-45fa-8bca-66dc6efc4661" defaultOutgoingWss="" defaultIncomingWss="" outgoingWss="" incomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          <con:setting id="com.eviware.soapui.support.editor.views.xml.form2.FormEditorView@ViewType">Only the first nodes</con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${soapapiendpoint}</con:endpoint>
        <con:request><![CDATA[<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
 <SOAP-ENV:Header>
     <h:fueloauth xmlns="http://exacttarget.com" xmlns:h="http://exacttarget.com">${#TestCase#accessToken}</h:fueloauth>
   </SOAP-ENV:Header>
 <SOAP-ENV:Body>
  <DeleteRequest xmlns="http://exacttarget.com/wsdl/partnerAPI">
      <Options>
   <SendResponseTo>
      <ResponseType>HTTPPost</ResponseType>
      <ResponseAddress>${#Project#fuelbinendpoint}/${Create New FuelBin#Response#$.id}</ResponseAddress>
      <RespondWhen>Always</RespondWhen>
      <IncludeResults>true</IncludeResults>
      <IncludeObjects>true</IncludeObjects>
   </SendResponseTo>
   
   <OrdinalID>0</OrdinalID>
   <RequestType>Asynchronous</RequestType>
</Options>
   <ns1:Objects xsi:type="ns1:Email" xmlns:ns1="http://exacttarget.com/wsdl/partnerAPI">
    <ns1:ID>${#TestCase#ObjectID}</ns1:ID>
    </ns1:Objects>
 </DeleteRequest>
 </SOAP-ENV:Body>
</SOAP-ENV:Envelope>]]></con:request>
        <con:assertion type="SOAP Response" id="076d4771-7559-4c05-9430-a70f41a0bd00"/>
        <con:assertion type="Valid HTTP Status Codes" id="d76b221c-a2ae-4601-8687-ac32fc6f0055" name="Valid HTTP Status Codes">
          <con:settings/>
          <con:configuration>
            <codes>200</codes>
          </con:configuration>
        </con:assertion>
        <con:assertion type="XPath Match" id="e9bceb57-b667-47f1-b4ee-11e1510d6d4b" name="Match content of [StatusCode]">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
//ns1:DeleteResponse[1]/ns1:Results[1]/ns1:StatusCode[1]/text()</path>
            <content>OK</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:assertion type="XPath Match" id="ba9a87e7-7f19-4482-8b21-27a5e062689c" name="Match content of [StatusMessage]">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
//ns1:DeleteResponse[1]/ns1:Results[1]/ns1:StatusMessage[1]/text()</path>
            <content>Queued</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:jmsPropertyConfig/>
        <con:wsaConfig mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
        <con:environmentSpec>
          <con:entry environmentId="8c0ecb7e-0f97-4c23-8ef5-5ae7ad8d15f8">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="request" name="Retrieve Email to confirm delete" id="622c77ee-b34e-4a8e-a254-a4492f3bd830">
    <con:settings/>
    <con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
      <con:interface>ETFramework</con:interface>
      <con:operation>Retrieve</con:operation>
      <con:request name="Retrieve Email to confirm delete" id="d9412851-a03e-493f-b996-c89f86b4d693" defaultOutgoingWss="" defaultIncomingWss="" outgoingWss="" incomingWss="">
        <con:settings>
          <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
        </con:settings>
        <con:encoding>UTF-8</con:encoding>
        <con:endpoint>${soapapiendpoint}</con:endpoint>
        <con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <soapenv:Header>
     <h:fueloauth xmlns="http://exacttarget.com" xmlns:h="http://exacttarget.com">${#TestCase#accessToken}</h:fueloauth>
  </soapenv:Header>
   <soapenv:Body>
      <RetrieveRequestMsg xmlns="http://exacttarget.com/wsdl/partnerAPI">
      <RetrieveRequest>
         <ObjectType>Email</ObjectType>
         <Properties>ID</Properties>
         <Properties>Name</Properties>
         <Properties>CustomerKey</Properties>
         <Properties>EmailType</Properties>
         <Filter xsi:type="SimpleFilterPart">
            <Property>CustomerKey</Property>
            <SimpleOperator>equals</SimpleOperator>
            <Value>${Create Random Email Name#result}</Value>
         </Filter>
      </RetrieveRequest>
   </RetrieveRequestMsg>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request>
        <con:assertion type="SOAP Response" id="47853253-cfed-4fd7-b9cc-fbf80534a1a8"/>
        <con:assertion type="XPath Match" id="9ca11bb7-46a9-41a3-9a37-4f103fd4d9c2" name="Check for existence of [ObjectID]" disabled="true">
          <con:configuration>
            <path>declare namespace ns1='http://exacttarget.com/wsdl/partnerAPI';
exists( //ns1:RetrieveResponseMsg/ns1:Results/ns1:ObjectID)</path>
            <content>true</content>
            <allowWildcards>false</allowWildcards>
            <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            <ignoreComments>false</ignoreComments>
          </con:configuration>
        </con:assertion>
        <con:credentials>
          <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
          <con:authType>No Authorization</con:authType>
        </con:credentials>
        <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
        <con:wsaConfig mustUnderstand="NONE" version="200508"/>
        <con:wsrmConfig version="1.2"/>
        <con:environmentSpec>
          <con:entry environmentId="8c0ecb7e-0f97-4c23-8ef5-5ae7ad8d15f8">
            <con:authProfile>Inherit From Parent</con:authProfile>
          </con:entry>
        </con:environmentSpec>
      </con:request>
    </con:config>
  </con:testStep>
  <con:testStep type="groovy" name="Confirm Delete" id="cfb36834-73b0-43bb-bbf9-f37402644711">
    <con:settings/>
    <con:config>
      <script>import groovy.util.XmlSlurper

def response = new XmlSlurper().parseText(context.expand( '${Retrieve Email to confirm delete#Response#declare namespace ns1=\'http://exacttarget.com/wsdl/partnerAPI\'; //ns1:RetrieveResponseMsg[1]}' ))

if( context.loopIndex == null )
context.loopIndex = 0
def numberOfTimes = context.expand( '${#TestCase#numberOfTimes}' ).toInteger()


if ( response.Results.ObjectID.size() > 0 ) {
  if ( ++context.loopIndex &lt;  numberOfTimes ) {
    log.info "Email not deleted yet"
    sleep(1000)
    testRunner.gotoStepByName( "Retrieve Email to Confirm Delete" )
  }
  else {
    log.info "Timeout, test should fail"
    testRunner.fail("Email not deleted after " + numberOfTimes.toString() + " retrieve attempts, timing out")
  }
}
else {
  log.info "Email deleted"
}</script>
    </con:config>
  </con:testStep>
  <con:properties>
    <con:property>
      <con:name>accessToken</con:name>
      <con:value>cduAV5tUI9CX0mpyXepJdlNN</con:value>
    </con:property>
    <con:property>
      <con:name>ObjectID</con:name>
      <con:value>92731</con:value>
    </con:property>
    <con:property>
      <con:name>numberOfTimes</con:name>
      <con:value>90</con:value>
    </con:property>
  </con:properties>
  <con:reportParameters/>
  <con:breakPoints>
    <con:testStepId>a9135ff1-81f1-452d-ac18-d3bb23d1aa50</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>4563a175-ed01-44a1-96ed-29fe276cc914</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>bced0768-a5c0-4e5f-9c1e-4dbe184cc167</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>8a0cd2ac-7821-413c-a17c-bd26aa6339ee</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>fd650dac-ed17-4312-b14b-408a7cf5e9cf</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>2c0cf771-7d76-43c0-af02-671bf84e68c9</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>0b9f8387-a62c-4900-bc3c-b4660f8a6a2e</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
  <con:breakPoints>
    <con:testStepId>f80170df-c5a5-413b-b450-206a9201fd1a</con:testStepId>
    <con:status>NONE</con:status>
    <con:properties/>
  </con:breakPoints>
</con:testCase>
